cinclude "<errno.h>"
cinclude "<string.h>"
include "io.nhp"

mod io:
	class file:
		handle ptr
		
		def __init__(array<char> path, array<char> mode):
			cdef fopen(handle, handle) handle
			cdef strerror(int) handle
			cdef strlen(handle) int
			cdef errno int
			cdef NULL handle
			self.ptr = fopen(cpath=cinterop::sanitizeCStr(path), cmode=cinterop::sanitizeCStr(mode))
			
			if self.ptr == NULL:
				errhandle = strerror(errno)
				errmsg = marshal char[strlen(errhandle)](errhandle);
				abort "Failed to open file; {errormsg}"

		def __copy__() file:
			abort "Cannot safley copy file"
		def __del__():
			cdef fclose(handle) None
			fclose(self.ptr)

	def canOpen(array<char> path, array<char> mode) bool:
		cdef fopen(handle, handle) handle
		cdef fclose(handle) None
		cdef NULL handle

		ptr = fopen(cpath=cinterop::sanitizeCStr(path), cmode=cinterop::sanitizeCStr(mode))
		if ptr == NULL:
			return false
		else:
			fclose(ptr)
			return true