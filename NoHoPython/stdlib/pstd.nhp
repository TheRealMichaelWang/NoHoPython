cinclude "<ptypes.h>"

mod plibsys:
	cdef int8 "pint8" int
	cdef uint8 "puint8" int
	cdef int16 "puint16" int:
		int16 toBigEndian "PINT16_TO_BE(##VALUE)"
		int16 fromBigEndian "PINT16_FROM_BE(##VALUE)"
	cdef uint16 "puint16" int:
		int16 toBigEndian "PUINT16_TO_BE(##VALUE)"
		int16 fromBigEndian "PUINT16_FROM_BE(##VALUE)"
	cdef int32 "puint32" int:
		int16 toBigEndian "PINT32_TO_BE(##VALUE)"
		int16 fromBigEndian "PINT32_FROM_BE(##VALUE)"
	cdef uint32 "puint32" int
		int16 toBigEndian "PUINT32_TO_BE(##VALUE)"
		int16 fromBigEndian "PUINT32_FROM_BE(##VALUE)"
	cdef int64 "pint64" int
		int16 toBigEndian "PINT64_TO_BE(##VALUE)"
		int16 fromBigEndian "PINT64_FROM_BE(##VALUE)"
	cdef uint64 "puint64" int
		int16 toBbigEndian "PUINT64_TO_BE(##VALUE)"
		int16 fromBigEndian "PUINT64_FROM_BE(##VALUE)"
	
	cdef size "psize" int
	attr
		NullState: "-1"

	cdef pptr<T> "ppointer" handle<T>

	cdef cstring "pchar*" handle<char>:
		int length "strlen(##VALUE)"
	attr:
		Destroy: "free(##VALUE);"
		Copy: "strdup(##VALUE)"
		NullState: "NULL"
		isPtr

mod typeExt:
	cdef plibsys_cstring_getAtIndex(plibsys::cstring, int) char "##ARG0_VALUE_CSRC[##ARG1_VALUE_CSRC]"
	cdef plibsys_cstring_setAtIndex(plibsys::cstring, int, char) char "##ARG0_VALUE_CSRC[##ARG1_VALUE_CSRC] = ##ARG2_VALUE_CSRC"

	cdef plibsys_cstring_parseDec(plibsys::cstring) dec "p_strtod(##ARG0_VALUE_CSRC)"

	pure string_to_plibsys_cstring(string str) plibsys::cstring:
		cdef malloc_cstring(int length) plibsys::cstring "calloc(##ARG0_VALUE_CSRC + 1, sizeof(char))"
		
		cstring = malloc_cstring(str.length)
		for i from 0 within str.length:
			cstring[i] = str[i]

		return cstring