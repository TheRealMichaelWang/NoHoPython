def main():
	# basic test
	boxA = ref(0)
	boxB = boxA
	boxB.setElem(100)

	#should print 100, not zero
	print(boxA.elem)





	# testing reference box with values that can be freed/destroyed
	boxC = ref([1,2,3,4,5] as array<int>)
	print(boxC.elem)

	#bottom line shoudln't compile
	# boxD = boxC

	# this line should compile
	boxD = boxC.asUnreleasable()
	print(boxD.elem)

	#these two lines should break
	#stuff = boxD.release()
	#otherStuff = boxC.release()
	




	# testing reference box when it's passed into a function and further refined
	boxE = ref([6,7,8,9,10])

	#this function destroys whats in an element type by releasing it
	def destroyFunction<T>(ref<T> refBox):
		refBox.release()

	#boxE is destroyed in this function
	destroyFunction(boxE) 
	#this print function should fail because boxE is assumed to be released
	print(boxE.elem as array<int>) 
